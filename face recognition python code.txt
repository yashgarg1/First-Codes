from PIL import Image, ImageDraw
from IPython.display import display

# The program we will be finding faces on the example below
pil_im = Image.open('yash.jpg')
display(pil_im)


import face_recognition
import numpy as np
from PIL import Image, ImageDraw
from IPython.display import display

# Load a sample picture and learn how to recognize it.
yash_image = face_recognition.load_image_file("yash.jpg")
yash_face_encoding =face_recognition.face_encodings(yash_image)[0]

# yash_image = face_recognition.load_image_file("yash.jpg")
# yash_face_encoding =face_recognition.face_encodings(yash_image)[0]

# Create arrays of known face encodings and the face_recognition.face_eir names
known_face_encodings = [
    yash_face_encoding
]
known_face_names = [
    "Yash garg"
]
print('Learned encoding for', len(known_face_encodings), 'images.')




# Load an image with an unknown face
unknown_image = face_recognition.load_image_file("yash2.jpg")

# Find all the faces and face encodings in the unknown image
face_locations = face_recognition.face_locations(unknown_image)
face_encodings = face_recognition.face_encodings(unknown_image, face_locations)

pil_image = Image.fromarray(unknown_image)
draw = ImageDraw.Draw(pil_image)

# Loop through each face found in the unknown image
for (top, right, bottom, left), face_encoding in zip(face_locations, face_encodings):
    # See if the face is a match for the known face(s)
    matches = face_recognition.compare_faces(known_face_encodings, face_encoding)

    name = "Unknown"

    # Or instead, use the known face with the smallest distance to the new face
    face_distances = face_recognition.face_distance(known_face_encodings, face_encoding)
    best_match_index = np.argmin(face_distances)
    if matches[best_match_index]:
        name = known_face_names[best_match_index]
    # Draw a box around the face using the Pillow module
    draw.rectangle(((left, top), (right, bottom)), outline=(0, 0, 255))

    # Draw a label with a name below the face
    text_width, text_height = draw.textsize(name)
    draw.rectangle(((left, bottom - text_height - 10), (right, bottom)), fill=(0, 0, 255), outline=(0, 0, 255))
    draw.text((left + 6, bottom - text_height - 5), name, fill=(255, 255, 255, 255))

    # if not name=="Unknown":
        # import serial
        # ser = serial.Serial('/dev/ttyACM0',baudrate=9600,timeout=0.1,write_timeout=0.1)
        # self.ser.write(str.encode('1'))
        # break

del draw

# Display the result
display(pil_image)